// <auto-generated />
using System;
using ClasesTallerMecanico.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ClasesTallerMecanico.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20251015123842_ModificacionTablas")]
    partial class ModificacionTablas
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ClasesTallerMecanico.Models.Insumo", b =>
                {
                    b.Property<int>("IdInsu")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdInsu"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdProveedor")
                        .HasColumnType("int");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("PrecioCompra")
                        .HasColumnType("float");

                    b.Property<double>("PrecioVenta")
                        .HasColumnType("float");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("IdInsu");

                    b.HasIndex("IdProveedor");

                    b.ToTable("Insumos");
                });

            modelBuilder.Entity("ClasesTallerMecanico.Models.Localidad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CodigoPostal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Provincia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Localidades");
                });

            modelBuilder.Entity("ClasesTallerMecanico.Models.Maquina", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Motor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Patente")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdCliente");

                    b.ToTable("Maquinas");
                });

            modelBuilder.Entity("ClasesTallerMecanico.Models.Persona", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Domicilio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdLocalidad")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdLocalidad");

                    b.ToTable("Persona", (string)null);

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("ClasesTallerMecanico.Models.Rol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("ClasesTallerMecanico.Models.Turno", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DomicilioTrabajo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int");

                    b.Property<int>("IdLocalidad")
                        .HasColumnType("int");

                    b.Property<int>("IdMaquina")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdCliente");

                    b.HasIndex("IdLocalidad");

                    b.HasIndex("IdMaquina");

                    b.ToTable("Turnos");
                });

            modelBuilder.Entity("ClasesTallerMecanico.Models.Cliente", b =>
                {
                    b.HasBaseType("ClasesTallerMecanico.Models.Persona");

                    b.Property<string>("CondFiscal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CuilCuit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Cliente", (string)null);
                });

            modelBuilder.Entity("ClasesTallerMecanico.Models.Proveedor", b =>
                {
                    b.HasBaseType("ClasesTallerMecanico.Models.Persona");

                    b.Property<string>("CodFiscal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CuilCuit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("Proveedor", (string)null);
                });

            modelBuilder.Entity("ClasesTallerMecanico.Models.Usuario", b =>
                {
                    b.HasBaseType("ClasesTallerMecanico.Models.Persona");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contrasena")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CuilCuit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dni")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdRol")
                        .HasColumnType("int");

                    b.HasIndex("IdRol");

                    b.ToTable("Usuario", (string)null);
                });

            modelBuilder.Entity("ClasesTallerMecanico.Models.Insumo", b =>
                {
                    b.HasOne("ClasesTallerMecanico.Models.Proveedor", "Proveedor")
                        .WithMany("Insumos")
                        .HasForeignKey("IdProveedor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Proveedor");
                });

            modelBuilder.Entity("ClasesTallerMecanico.Models.Maquina", b =>
                {
                    b.HasOne("ClasesTallerMecanico.Models.Cliente", "Cliente")
                        .WithMany("Maquinas")
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("ClasesTallerMecanico.Models.Persona", b =>
                {
                    b.HasOne("ClasesTallerMecanico.Models.Localidad", "Localidad")
                        .WithMany("Personas")
                        .HasForeignKey("IdLocalidad")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Localidad");
                });

            modelBuilder.Entity("ClasesTallerMecanico.Models.Turno", b =>
                {
                    b.HasOne("ClasesTallerMecanico.Models.Cliente", "Cliente")
                        .WithMany("Turnos")
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ClasesTallerMecanico.Models.Localidad", "Localidad")
                        .WithMany()
                        .HasForeignKey("IdLocalidad")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ClasesTallerMecanico.Models.Maquina", "Maquina")
                        .WithMany()
                        .HasForeignKey("IdMaquina")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Localidad");

                    b.Navigation("Maquina");
                });

            modelBuilder.Entity("ClasesTallerMecanico.Models.Cliente", b =>
                {
                    b.HasOne("ClasesTallerMecanico.Models.Persona", null)
                        .WithOne()
                        .HasForeignKey("ClasesTallerMecanico.Models.Cliente", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ClasesTallerMecanico.Models.Usuario", null)
                        .WithMany("Clientes")
                        .HasForeignKey("UsuarioId");
                });

            modelBuilder.Entity("ClasesTallerMecanico.Models.Proveedor", b =>
                {
                    b.HasOne("ClasesTallerMecanico.Models.Persona", null)
                        .WithOne()
                        .HasForeignKey("ClasesTallerMecanico.Models.Proveedor", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ClasesTallerMecanico.Models.Usuario", b =>
                {
                    b.HasOne("ClasesTallerMecanico.Models.Persona", null)
                        .WithOne()
                        .HasForeignKey("ClasesTallerMecanico.Models.Usuario", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ClasesTallerMecanico.Models.Rol", "Rol")
                        .WithMany("Usuarios")
                        .HasForeignKey("IdRol")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("ClasesTallerMecanico.Models.Localidad", b =>
                {
                    b.Navigation("Personas");
                });

            modelBuilder.Entity("ClasesTallerMecanico.Models.Rol", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("ClasesTallerMecanico.Models.Cliente", b =>
                {
                    b.Navigation("Maquinas");

                    b.Navigation("Turnos");
                });

            modelBuilder.Entity("ClasesTallerMecanico.Models.Proveedor", b =>
                {
                    b.Navigation("Insumos");
                });

            modelBuilder.Entity("ClasesTallerMecanico.Models.Usuario", b =>
                {
                    b.Navigation("Clientes");
                });
#pragma warning restore 612, 618
        }
    }
}
